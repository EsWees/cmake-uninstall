CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(cmake-uninstall NONE)

INCLUDE(CMakePackageConfigHelpers)
INCLUDE(GNUInstallDirs)

FIND_PACKAGE(cmake-version4git 0.0 QUIET)
IF(NOT cmake-version4git_FOUND)
	INCLUDE(3rdparty/cmake-version4git/cmake/cmake-version4git.cmake)
ENDIF()
PROJECT_VERSION_FROM_GIT()

SET(PROJECT_CONFIG_PREFIX
	"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config")
SET(PROJECT_CMAKE_INSTALL_LIBDIR
	"${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}-${PROJECT_VERSION}")

WRITE_BASIC_PACKAGE_VERSION_FILE("${PROJECT_CONFIG_PREFIX}-version.cmake"
VERSION
	${PROJECT_VERSION}
COMPATIBILITY
	SameMajorVersion)

CONFIGURE_PACKAGE_CONFIG_FILE("cmake/${PROJECT_NAME}-config.cmake.in"
"${PROJECT_CONFIG_PREFIX}.cmake"
INSTALL_DESTINATION
	"${PROJECT_CMAKE_INSTALL_LIBDIR}"
NO_SET_AND_CHECK_MACRO
NO_CHECK_REQUIRED_COMPONENTS_MACRO)

INSTALL(FILES
	"${PROJECT_CONFIG_PREFIX}-version.cmake"
	"${PROJECT_CONFIG_PREFIX}.cmake"
	cmake/cmake_uninstall.cmake.in
DESTINATION
	"${PROJECT_CMAKE_INSTALL_LIBDIR}"
COMPONENT
	Devel)

CONFIGURE_FILE(cmake/cmake_uninstall.cmake.in
"${CMAKE_BINARY_DIR}/cmake_uninstall.cmake" @ONLY)

ADD_CUSTOM_TARGET(uninstall
"${CMAKE_COMMAND}" -P "${CMAKE_BINARY_DIR}/cmake_uninstall.cmake"
COMMENT
	"Uninstall the project...")
